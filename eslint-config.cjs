require('@rushstack/eslint-patch/modern-module-resolution')

module.exports = {
  reportUnusedDisableDirectives: true,
  env: {
    es6: true,
    browser: true,
    node: true,
  },
  ignorePatterns: [
    '*.min.*',
    '*.d.ts',
    'dist',
    'public',
    'temp',
    'output',
    'CHANGELOG.md',
    'LICENSE*',

    // package manager
    'packages-lock.json',
    'pnpm-lock.yaml',
    'yarn.lock',

    // test framework
    'coverage',
    '__snapshots__',

    // software
    '!.github',
    '!.vitepress',
    '!.vscode',
  ],
  extends: [
    'eslint:recommended',
    'plugin:vue/vue3-recommended',
    '@vue/eslint-config-typescript/recommended',
  ],
  overrides: [
    {
      files: [
        '**/pages/**/*.{js,ts,vue}',
        '**/layouts/**/*.{js,ts,vue}',
        '**/app.{js,ts,vue}',
        '**/error.{js,ts,vue}',
      ],
      rules: {
        'vue/multi-word-component-names': 'off',
      },
    },
    {
      files: ['*.d.ts'],
      rules: {
        'import/no-duplicates': 'off',
      },
    },
    {
      files: ['*.js'],
      rules: {
        '@typescript-eslint/no-var-requires': 'off',
      },
    },
    {
      files: ['*.test.ts', '*.test.js', '*.spec.ts', '*.spec.js'],
      rules: {
        'no-unused-expressions': 'off',
      },
    },
    {
      files: ['*.vue'],
      parser: 'vue-eslint-parser',
      parserOptions: {
        parser: '@typescript-eslint/parser',
      },
      rules: {
        'no-undef': 'off',
      },
    },
    {
      files: ['*.ts'],
      rules: {
        'no-undef': 'off',
      },
    },
  ],
  rules: {
    /* js
    ---------------------------------------- */
    'accessor-pairs': [
      'error',
      {
        setWithoutGet: true,
        getWithoutSet: false,
        enforceForClassMembers: true,
      },
    ],
    'array-bracket-spacing': ['warn', 'never'],
    'array-bracket-newline': ['warn', { multiline: true }],
    'array-callback-return': 'error',
    'arrow-spacing': ['warn', { before: true, after: true }],
    'arrow-parens': ['warn', 'always'],
    'block-scoped-var': 'error',
    'block-spacing': ['warn', 'always'],
    // 'brace-style': ['warn', 'stroustrup', { allowSingleLine: false }],
    'camelcase': 'off',
    // 'comma-dangle': ['warn', 'always-multiline'],
    // 'comma-spacing': ['warn', { before: false, after: true }],
    'comma-style': ['warn', 'last'],
    'computed-property-spacing': ['warn', 'never', { enforceForClassMembers: true }],
    'constructor-super': 'error',
    'curly': ['warn', 'multi-or-nest', 'consistent'],
    'default-case-last': 'error',
    'dot-location': ['warn', 'property'],
    'dot-notation': ['warn', { allowKeywords: true }],
    'eqeqeq': ['error', 'smart'],
    'func-call-spacing': ['warn', 'never'],
    'generator-star-spacing': ['warn', { before: false, after: true }],
    'key-spacing': ['warn', { beforeColon: false, afterColon: true }],
    // 'keyword-spacing': ['warn', { before: true, after: true }],
    // 'lines-between-class-members': ['warn', 'always', { exceptAfterSingleLine: true }],
    'multiline-ternary': ['warn', 'always-multiline'],
    'new-cap': ['error', { newIsCap: true, capIsNew: false, properties: true }],
    'new-parens': 'warn',
    'no-alert': 'warn',
    'no-array-constructor': 'error',
    'no-async-promise-executor': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-class-assign': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': ['error', 'always'],
    'no-const-assign': 'error',
    'no-console': ['error', { allow: ['warn', 'error'] }],
    'no-constant-condition': ['error', { checkLoops: false }],
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-delete-var': 'error',
    'no-dupe-args': 'error',
    // 'no-dupe-class-members': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-useless-backreference': 'error',
    'no-empty': ['error', { allowEmptyCatch: true }],
    'no-empty-character-class': 'error',
    'no-empty-pattern': 'error',
    'no-eval': 'error',
    'no-ex-assign': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'warn',
    'no-extra-boolean-cast': 'warn',
    // 'no-extra-parens': ['warn', 'functions'],
    'no-fallthrough': 'error',
    'no-floating-decimal': 'warn',
    'no-func-assign': 'error',
    'no-global-assign': 'error',
    'no-implied-eval': 'error',
    'no-import-assign': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-iterator': 'error',
    'no-labels': ['error', { allowLoop: false, allowSwitch: false }],
    'no-lone-blocks': 'error',
    // 'no-loss-of-precision': 'error',
    'no-misleading-character-class': 'error',
    'no-prototype-builtins': 'error',
    'no-useless-catch': 'error',
    'no-mixed-operators': [
      'error',
      {
        groups: [
          ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
          ['&&', '||'],
          ['in', 'instanceof'],
        ],
        allowSamePrecedence: true,
      },
    ],
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-spaces': 'warn',
    'no-multi-str': 'error',
    'no-multiple-empty-lines': ['warn', { max: 1, maxBOF: 0, maxEOF: 0 }],
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-symbol': 'error',
    'no-new-wrappers': 'error',
    'no-obj-calls': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': 'off',
    'no-proto': 'error',
    // 'no-redeclare': 'error',
    'no-regex-spaces': 'warn',
    'no-restricted-syntax': ['error', 'DebuggerStatement', 'LabeledStatement', 'WithStatement'],
    'no-return-assign': 'error',
    'no-return-await': 'off',
    'no-self-assign': ['error', { props: true }],
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-sparse-arrays': 'error',
    'no-tabs': 'error',
    'no-template-curly-in-string': 'error',
    'no-this-before-super': 'error',
    'no-throw-literal': 'error',
    'no-undef': 'error',
    'no-undef-init': 'warn',
    'no-unexpected-multiline': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unneeded-ternary': ['warn', { defaultAssignment: false }],
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true,
      },
    ],
    // 'no-unused-vars': 'warn',
    // 'no-use-before-define': [
    //   'error', {
    //     functions: false,
    //     classes: false,
    //     variables: true,
    //   },
    // ],
    'no-useless-call': 'error',
    'no-useless-computed-key': 'warn',
    // 'no-useless-constructor': 'error',
    'no-useless-concat': 'error',
    'no-useless-escape': 'error',
    'no-useless-rename': 'warn',
    'no-useless-return': 'warn',
    'no-var': 'warn',
    'no-void': 'error',
    'no-whitespace-before-property': 'warn',
    'no-with': 'error',
    'object-curly-newline': ['warn', { multiline: true, consistent: true }],
    // 'object-curly-spacing': ['warn', 'always'],
    'object-property-newline': ['warn', { allowMultiplePropertiesPerLine: true }],
    'object-shorthand': [
      'warn', 'always',
      {
        ignoreConstructors: false,
        avoidQuotes: true,
      },
    ],
    'one-var': ['warn', { initialized: 'never' }],
    'operator-linebreak': ['warn', 'before'],
    'padded-blocks': [
      'warn',
      {
        blocks: 'never',
        switches: 'never',
        classes: 'never',
      },
    ],
    'prefer-const': [
      'warn',
      {
        destructuring: 'any',
        ignoreReadBeforeAssign: true,
      },
    ],
    'prefer-promise-reject-errors': 'error',
    'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
    'prefer-arrow-callback': [
      'warn',
      {
        allowNamedFunctions: false,
        allowUnboundThis: true,
      },
    ],
    'prefer-exponentiation-operator': 'warn',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'warn',
    'quote-props': ['warn', 'consistent-as-needed'],
    // 'quotes': ['warn', 'single'],
    'require-await': 'error',
    'rest-spread-spacing': ['warn', 'never'],
    // 'semi': ['warn', 'never'],
    'semi-spacing': ['warn', { before: false, after: true }],
    // 'space-before-blocks': ['warn', 'always'],
    // 'space-before-function-paren': [
    //   'warn',
    //   {
    //     anonymous: 'always',
    //     named: 'never',
    //     asyncArrow: 'always',
    //   },
    // ],
    'space-in-parens': ['warn', 'never'],
    // 'space-infix-ops': 'warn',
    'space-unary-ops': ['warn', { words: true, nonwords: false }],
    'spaced-comment': [
      'warn', 'always',
      {
        line: {
          markers: ['/'],
          exceptions: ['/', '#'],
        },
        block: {
          markers: ['!'],
          exceptions: ['*'],
          balanced: true,
        },
      },
    ],
    'symbol-description': 'error',
    'template-curly-spacing': ['warn', 'never'],
    'template-tag-spacing': ['warn', 'never'],
    'unicode-bom': ['warn', 'never'],
    'use-isnan': [
      'error',
      {
        enforceForSwitchCase: true,
        enforceForIndexOf: true,
      },
    ],
    'valid-typeof': ['error', { requireStringLiterals: true }],
    'vars-on-top': 'error',
    'wrap-iife': ['warn', 'any', { functionPrototypeMethods: true }],
    'yield-star-spacing': ['warn', 'both'],
    'yoda': ['warn', 'never'],
    'sort-imports': [
      'warn',
      {
        ignoreCase: false,
        ignoreDeclarationSort: true,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
        allowSeparatedGroups: false,
      },
    ],

    /* EditorConfig
    ---------------------------------------- */
    // 'indent': [
    //   'warn', 2,
    //   {
    //     SwitchCase: 1,
    //     VariableDeclarator: 1,
    //     outerIIFEBody: 1,
    //     MemberExpression: 1,
    //     FunctionDeclaration: { parameters: 1, body: 1 },
    //     FunctionExpression: { parameters: 1, body: 1 },
    //     CallExpression: { arguments: 1 },
    //     ArrayExpression: 1,
    //     ObjectExpression: 1,
    //     ImportDeclaration: 1,
    //     flatTernaryExpressions: false,
    //     ignoreComments: false,
    //     offsetTernaryExpressions: true,
    //     ignoredNodes: ['TemplateLiteral *', 'JSXElement', 'JSXElement > *', 'JSXAttribute', 'JSXIdentifier', 'JSXNamespacedName', 'JSXMemberExpression', 'JSXSpreadAttribute', 'JSXExpressionContainer', 'JSXOpeningElement', 'JSXClosingElement', 'JSXFragment', 'JSXOpeningFragment', 'JSXClosingFragment', 'JSXText', 'JSXEmptyExpression', 'JSXSpreadChild'],
    //   },
    // ],
    'linebreak-style': 'off',
    'no-trailing-spaces': [
      'warn',
      {
        skipBlankLines: false,
        ignoreComments: false,
      },
    ],
    'eol-last': ['warn', 'always'],

    /* ts
    ---------------------------------------- */
    '@typescript-eslint/ban-ts-comment': ['error', { 'ts-ignore': 'allow-with-description' }],
    '@typescript-eslint/member-delimiter-style': ['warn', { multiline: { delimiter: 'none' } }],
    '@typescript-eslint/type-annotation-spacing': ['warn', {}],
    '@typescript-eslint/consistent-type-imports': ['warn', { prefer: 'type-imports', disallowTypeAnnotations: false }],
    '@typescript-eslint/consistent-type-definitions': ['warn', 'interface'],
    '@typescript-eslint/prefer-ts-expect-error': 'warn',

    '@typescript-eslint/consistent-indexed-object-style': 'off',
    '@typescript-eslint/naming-convention': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/parameter-properties': 'off',
    '@typescript-eslint/triple-slash-reference': 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-namespace': 'off',

    /* override js
    ---------------------------------------- */
    'no-useless-constructor': 'off',

    'semi': ['off', 'never'],
    '@typescript-eslint/semi': ['warn', 'never'],

    'quotes': 'off',
    '@typescript-eslint/quotes': ['warn', 'single'],

    'indent': 'off',
    '@typescript-eslint/indent': [
      'warn', 2,
      {
        SwitchCase: 1,
        VariableDeclarator: 1,
        outerIIFEBody: 1,
        MemberExpression: 1,
        FunctionDeclaration: { parameters: 1, body: 1 },
        FunctionExpression: { parameters: 1, body: 1 },
        CallExpression: { arguments: 1 },
        ArrayExpression: 1,
        ObjectExpression: 1,
        ImportDeclaration: 1,
        flatTernaryExpressions: false,
        ignoreComments: false,
        ignoredNodes: [
          'TemplateLiteral *',
          'JSXElement',
          'JSXElement > *',
          'JSXAttribute',
          'JSXIdentifier',
          'JSXNamespacedName',
          'JSXMemberExpression',
          'JSXSpreadAttribute',
          'JSXExpressionContainer',
          'JSXOpeningElement',
          'JSXClosingElement',
          'JSXFragment',
          'JSXOpeningFragment',
          'JSXClosingFragment',
          'JSXText',
          'JSXEmptyExpression',
          'JSXSpreadChild',
          'TSTypeParameterInstantiation',
        ],
        offsetTernaryExpressions: true,
      },
    ],

    'brace-style': 'off',
    '@typescript-eslint/brace-style': ['warn', 'stroustrup', { allowSingleLine: false }],

    'comma-spacing': 'off',
    '@typescript-eslint/comma-spacing': ['warn', { before: false, after: true }],

    'comma-dangle': 'off',
    '@typescript-eslint/comma-dangle': ['warn', 'always-multiline'],

    'space-infix-ops': 'off',
    '@typescript-eslint/space-infix-ops': 'warn',

    'space-before-blocks': 'off',
    '@typescript-eslint/space-before-blocks': ['warn', 'always'],

    'space-before-function-paren': 'off',
    '@typescript-eslint/space-before-function-paren': [
      'warn',
      {
        anonymous: 'always',
        named: 'never',
        asyncArrow: 'always',
      },
    ],

    'keyword-spacing': 'off',
    '@typescript-eslint/keyword-spacing': ['warn', { before: true, after: true }],

    'object-curly-spacing': 'off',
    '@typescript-eslint/object-curly-spacing': ['warn', 'always'],

    'lines-between-class-members': 'off',
    '@typescript-eslint/lines-between-class-members': ['warn', 'always', { exceptAfterSingleLine: true }],

    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],

    'no-redeclare': 'off',
    '@typescript-eslint/no-redeclare': 'error',

    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['error', { functions: false, classes: false, variables: true }],

    'no-extra-parens': 'off',
    '@typescript-eslint/no-extra-parens': ['warn', 'functions'],

    'no-dupe-class-members': 'off',
    '@typescript-eslint/no-dupe-class-members': 'error',

    'no-loss-of-precision': 'off',
    '@typescript-eslint/no-loss-of-precision': 'error',

    /* vue
    ---------------------------------------- */
    'vue/block-tag-newline': [
      'warn',
      { singleline: 'always', multiline: 'always' },
    ],
    'vue/component-name-in-template-casing': [
      'warn', 'PascalCase', {
        registeredComponentsOnly: false,
        ignores: [],
      },
    ],
    'vue/component-options-name-casing': ['warn', 'PascalCase'],
    'vue/component-tags-order': [
      'warn',
      { order: ['script', 'template', 'style'] },
    ],
    'vue/custom-event-name-casing': ['error', 'kebab-case', { ignores: [] }],
    'vue/define-macros-order': 'warn',
    'vue/html-comment-content-newline': [
      'warn',
      { singleline: 'never', multiline: 'always' },
      { exceptions: [] },
    ],
    'vue/html-comment-content-spacing': ['warn', 'always', { exceptions: [] }],
    'vue/html-comment-indent': ['warn', 2],
    'vue/max-attributes-per-line': 'off',
    'vue/multi-word-component-names': 'off',
    'vue/no-restricted-v-bind': ['error', '/^v-/'],
    'vue/no-useless-mustaches': 'warn',
    'vue/no-useless-v-bind': 'warn',
    'vue/no-v-html': 'off',
    'vue/no-v-text-v-html-on-component': 'error',
    'vue/padding-line-between-blocks': ['warn', 'always'],
    'vue/prefer-import-from-vue': 'warn',
    'vue/prefer-separate-static-class': 'warn',
    'vue/require-prop-types': 'off',
    'vue/require-default-prop': 'off',

    /* strongly recommended
    ---------------------------------------- */
    'vue/html-self-closing': [
      'warn', {
        html: {
          void: 'always',
          normal: 'never',
          component: 'always',
        },
        svg: 'always',
        math: 'always',
      },
    ],

    /* extensions
    ---------------------------------------- */
    'vue/array-bracket-newline': ['warn', { multiline: true }],
    'vue/array-bracket-spacing': ['warn', 'never'],
    'vue/arrow-spacing': ['warn', { before: true, after: true }],
    'vue/block-spacing': ['warn', 'always'],
    'vue/brace-style': ['warn', 'stroustrup', { allowSingleLine: false }],
    'vue/camelcase': 'off',
    'vue/comma-dangle': ['warn', 'always-multiline'],
    'vue/comma-spacing': ['warn', { before: false, after: true }],
    'vue/comma-style': ['warn', 'last'],
    'vue/dot-location': ['warn', 'property'],
    'vue/dot-notation': ['warn', { allowKeywords: true }],
    'vue/eqeqeq': ['error', 'smart'],
    'vue/func-call-spacing': ['warn', 'never'],
    'vue/key-spacing': ['warn', { beforeColon: false, afterColon: true }],
    'vue/keyword-spacing': ['warn', { before: true, after: true }],
    'vue/max-len': 'off',
    'vue/no-constant-condition': ['error', { checkLoops: false }],
    'vue/no-empty-pattern': 'error',
    'vue/no-extra-parens': ['warn', 'functions'],
    'vue/no-irregular-whitespace': 'error',
    'vue/no-loss-of-precision': 'error',
    'vue/no-restricted-syntax': ['error', 'DebuggerStatement', 'LabeledStatement', 'WithStatement'],
    'vue/no-sparse-arrays': 'error',
    'vue/no-useless-concat': 'error',
    'vue/object-curly-newline': ['warn', { multiline: true, consistent: true }],
    'vue/object-curly-spacing': ['warn', 'always'],
    'vue/object-property-newline': ['warn', { allowMultiplePropertiesPerLine: true }],
    'vue/object-shorthand': ['warn', 'always', { ignoreConstructors: false, avoidQuotes: true }],
    'vue/operator-linebreak': ['warn', 'before'],
    'vue/prefer-template': 'warn',
    'vue/quote-props': ['warn', 'consistent-as-needed'],
    'vue/space-in-parens': ['warn', 'never'],
    'vue/space-infix-ops': 'warn',
    'vue/space-unary-ops': ['warn', { words: true, nonwords: false }],
    'vue/template-curly-spacing': ['warn', 'never'],
  },
}
